@model FestivalManagementWeb.Models.TextKeyValueViewModel

@{
    ViewData["Title"] = "テキストデータ管理";
}

<h1>@ViewData["Title"]</h1>
<p class="text-muted">現在のブランチ: <strong>@Model.SelectedYear</strong></p>

<hr />

<div class="row">
    <div class="col-md-4">
        <h4>新規作成</h4>
        <form asp-action="Upsert">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ItemToEdit.Id" />
            <div class="form-group">
                <label asp-for="ItemToEdit.Key" class="control-label"></label>
                <input asp-for="ItemToEdit.Key" class="form-control" />
                <span asp-validation-for="ItemToEdit.Key" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ItemToEdit.Value" class="control-label"></label>
                <textarea asp-for="ItemToEdit.Value" class="form-control"></textarea>
                <span asp-validation-for="ItemToEdit.Value" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <input type="submit" value="作成" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <div class="d-flex justify-content-between align-items-center">
            <h4>データ一覧 <span class="badge bg-secondary">@Model.SelectedYear</span></h4>
            <form asp-controller="Deploy" asp-action="Run" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                <button type="submit" class="btn btn-info">Webサイトに適応 (ブランチ @Model.SelectedYear)</button>
            </form>
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ItemToEdit.Key)</th>
                    <th>@Html.DisplayNameFor(model => model.ItemToEdit.Value)</th>
                    <th>@Html.DisplayNameFor(model => model.ItemToEdit.Deployed)</th>
                    <th>@Html.DisplayNameFor(model => model.ItemToEdit.DeployedDate)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.AllItems)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Key)</td>
                        <td>@Html.DisplayFor(modelItem => item.Value)</td>
                        <td>@(item.Deployed == true ? "はい" : "いいえ")</td>
                        <td>@Html.DisplayFor(_ => item.DeployedDate, "JstDateTime")</td>
                        <td>
                            <button type="button" class="btn btn-sm btn-outline-secondary" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#textUpdateModal"
                                    data-id="@item.Id"
                                    data-key="@item.Key"
                                    data-value="@item.Value">
                                編集
                            </button>
                            <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-link text-danger p-0" onclick="return confirm('本当に削除しますか？');">削除</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="_TextUpdateModal" model="Model" />

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger mt-3">@TempData["Error"]</div>
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success mt-3">@TempData["Message"]</div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
