name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
    paths:
      - 'FestivalManagementWeb/**'
      - '.github/workflows/deploy-container-app.yml'

env:
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  CONTAINER_APP_NAME: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
  CONTAINERAPP_ENVIRONMENT: ${{ secrets.AZURE_CONTAINERAPPS_ENVIRONMENT }}
  CONTAINERAPPS_ENVIRONMENT_LOCATION: ${{ vars.CA_ENVIRONMENT_LOCATION }}
  CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  CONTAINER_REGISTRY_REPOSITORY: festivalmanagementweb/app
  CA_IDLE_COOLDOWN_SECONDS: ${{ vars.CA_IDLE_COOLDOWN_SECONDS }}
  COSMOS_ACCOUNT_NAME: ${{ vars.COSMOS_ACCOUNT_NAME }}
  COSMOS_RESOURCE_GROUP: ${{ vars.COSMOS_RESOURCE_GROUP }}
  COSMOS_SUBSCRIPTION_ID: ${{ vars.COSMOS_SUBSCRIPTION_ID }}
  COSMOS_LOCATION: ${{ vars.COSMOS_LOCATION }}
  COSMOS_DATABASE_NAME: ${{ vars.COSMOS_DATABASE_NAME }}
  COSMOS_COLLECTION_NAMES: ${{ vars.COSMOS_COLLECTION_NAMES }}
  COSMOS_PROVISIONING: ${{ vars.COSMOS_PROVISIONING }}
  COSMOS_DATABASE_RU: ${{ vars.COSMOS_DATABASE_RU }}
  COSMOS_COLLECTION_RU: ${{ vars.COSMOS_COLLECTION_RU }}
  COSMOS_ENABLE_FREE_TIER: ${{ vars.COSMOS_ENABLE_FREE_TIER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      IMAGE_TAG: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.CONTAINER_REGISTRY_REPOSITORY }}:${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set subscription
        if: ${{ secrets.AZURE_SUBSCRIPTION_ID != '' }}
        run: az account set --subscription "${{ secrets.AZURE_SUBSCRIPTION_ID }}"

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v5
        with:
          context: ./FestivalManagementWeb
          file: ./FestivalManagementWeb/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}

      - name: Ensure containerapp extension
        shell: bash
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          if ! az extension show --name containerapp >/dev/null 2>&1; then
            az extension add --name containerapp
          fi

      - name: Deploy infrastructure (Bicep)
        shell: bash
        run: |
          set -euo pipefail
          env_name="${AZURE_CONTAINERAPPS_ENVIRONMENT:-}"
          if [[ -z "$env_name" ]]; then
            echo "AZURE_CONTAINERAPPS_ENVIRONMENT secret must be set." >&2
            exit 1
          fi
          params=( "environmentName=$env_name" "containerAppName=$CONTAINER_APP_NAME" "containerImage=$IMAGE_TAG" "containerRegistryServer=$CONTAINER_REGISTRY_LOGIN_SERVER" "containerRegistryUsername=${{ secrets.ACR_USERNAME }}" "containerRegistryPassword=${{ secrets.ACR_PASSWORD }}" )
          if [[ -n "${CONTAINERAPPS_ENVIRONMENT_LOCATION:-}" ]]; then
            params+=("environmentLocation=$CONTAINERAPPS_ENVIRONMENT_LOCATION")
          fi
          if [[ -n "${CA_IDLE_COOLDOWN_SECONDS:-}" ]]; then
            params+=("cooldownSeconds=$CA_IDLE_COOLDOWN_SECONDS")
          fi
          if [[ -n "${COSMOS_ACCOUNT_NAME:-}" ]]; then
            params+=("cosmosAccountName=$COSMOS_ACCOUNT_NAME")
            if [[ -n "${COSMOS_LOCATION:-}" ]]; then
              params+=("cosmosLocation=$COSMOS_LOCATION")
            fi
            if [[ -n "${COSMOS_DATABASE_NAME:-}" ]]; then
              params+=("cosmosDatabaseName=$COSMOS_DATABASE_NAME")
            fi
            if [[ -n "${COSMOS_PROVISIONING:-}" ]]; then
              params+=("cosmosProvisioning=$COSMOS_PROVISIONING")
            fi
            if [[ -n "${COSMOS_DATABASE_RU:-}" ]]; then
              params+=("cosmosDatabaseThroughput=$COSMOS_DATABASE_RU")
            fi
            if [[ -n "${COSMOS_COLLECTION_NAMES:-}" ]]; then
              params+=("cosmosCollectionNames=$COSMOS_COLLECTION_NAMES")
            fi
            if [[ -n "${COSMOS_COLLECTION_RU:-}" ]]; then
              params+=("cosmosCollectionThroughput=$COSMOS_COLLECTION_RU")
            fi
            if [[ -n "${COSMOS_ENABLE_FREE_TIER:-}" ]]; then
              params+=("cosmosEnableFreeTier=${COSMOS_ENABLE_FREE_TIER,,}")
            fi
          fi
          az deployment group create \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --template-file infra/main.bicep \
            --parameters "${params[@]}"

      - name: Show active revision
        run: |
          az containerapp revision list \
            --name "$CONTAINER_APP_NAME" \
            --resource-group "$AZURE_RESOURCE_GROUP" \
            --query "[?properties.active==\`true\`].[name,properties.createdTime,properties.fqdn]" \
            -o table
